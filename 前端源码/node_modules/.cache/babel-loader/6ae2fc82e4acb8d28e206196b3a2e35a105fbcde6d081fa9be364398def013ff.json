{"ast":null,"code":"import * as echarts from 'echarts';\nimport BoxBorder from \"@/views/component/BoxBorder\";\nimport Count from \"@/api/Count\";\nexport default {\n  name: \"BoxView3\",\n  components: {\n    BoxBorder\n  },\n  data() {\n    return {\n      data: []\n    };\n  },\n  methods: {\n    onLoad(dataDict) {\n      // 基于准备好的dom，初始化echarts实例\n      let myChart = echarts.init(document.getElementById('main-view'));\n      let xData = dataDict.map(item => item.name);\n      let data = dataDict.map(item => item.money);\n      console.log(data);\n      let option = {\n        // backgroundColor: \"#141f56\",\n\n        tooltip: {\n          show: \"true\",\n          trigger: 'item',\n          backgroundColor: 'rgba(0,0,0,0.4)',\n          // 背景\n          padding: [8, 10] //内边距\n          // extraCssText: 'box-shadow: 0 0 3px rgba(255, 255, 255, 0.4);', //添加阴影\n        },\n        grid: {\n          borderWidth: 0,\n          top: 20,\n          bottom: 35,\n          left: 55,\n          right: 30,\n          textStyle: {\n            color: \"#fff\"\n          }\n        },\n        xAxis: [{\n          type: 'category',\n          axisTick: {\n            show: false\n          },\n          axisLine: {\n            show: true,\n            lineStyle: {\n              color: '#363e83'\n            }\n          },\n          axisLabel: {\n            inside: false,\n            textStyle: {\n              color: '#bac0c0',\n              fontWeight: 'normal',\n              fontSize: '12'\n            }\n          },\n          data: xData\n        }, {\n          type: 'category',\n          axisLine: {\n            show: false\n          },\n          axisTick: {\n            show: false\n          },\n          axisLabel: {\n            show: false\n          },\n          splitArea: {\n            show: false\n          },\n          splitLine: {\n            show: false\n          },\n          data: xData\n        }],\n        yAxis: {\n          type: 'value',\n          axisTick: {\n            show: false\n          },\n          axisLine: {\n            show: true,\n            lineStyle: {\n              color: '#32346c'\n            }\n          },\n          splitLine: {\n            show: true,\n            lineStyle: {\n              color: '#32346c '\n            }\n          },\n          axisLabel: {\n            textStyle: {\n              color: '#bac0c0',\n              fontWeight: 'normal',\n              fontSize: '12'\n            },\n            formatter: '{value}'\n          }\n        },\n        series: [{\n          type: 'bar',\n          itemStyle: {\n            normal: {\n              show: true,\n              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                offset: 0,\n                color: '#00c0e9'\n              }, {\n                offset: 1,\n                color: '#3b73cf'\n              }]),\n              barBorderRadius: 50,\n              borderWidth: 0\n            },\n            emphasis: {\n              shadowBlur: 15,\n              shadowColor: 'rgba(105,123, 214, 0.7)'\n            }\n          },\n          zlevel: 2,\n          barWidth: '20%',\n          data: data\n        }, {\n          name: '',\n          type: 'bar',\n          xAxisIndex: 1,\n          zlevel: 1,\n          itemStyle: {\n            normal: {\n              color: '#121847',\n              borderWidth: 0,\n              shadowBlur: {\n                shadowColor: 'rgba(255,255,255,0.31)',\n                shadowBlur: 10,\n                shadowOffsetX: 0,\n                shadowOffsetY: 2\n              }\n            }\n          },\n          barWidth: '20%',\n          data: [30, 30, 30, 30, 30]\n        }]\n      };\n\n      // 使用刚指定的配置项和数据显示图表。\n      myChart.setOption(option);\n      window.addEventListener(\"resize\", function () {\n        myChart.resize();\n      });\n    }\n  },\n  mounted() {\n    Count.count2(\"港股通资金流\").then(res => {\n      let data = res.data;\n      data = data.map(item => {\n        return {\n          name: item.name === '沪港通' || item.name === '深港通' ? item.name2 : item.name,\n          value: item.name === '沪港通' || item.name === '深港通' ? item.value2 : item.value\n        };\n      });\n      data = data.map(item => {\n        let money = 0;\n        if (item.value.indexOf(\"万元\") !== -1) {\n          money = parseFloat(item.value.replace(\"-\", \"\").replace(\"万元\", \"\") + \"00000\");\n        }\n        if (item.value.indexOf(\"亿元\") !== -1) {\n          money = parseFloat(item.value.replace(\"-\", \"\").replace(\"亿元\", \"\") + \"000000000\");\n        }\n        return {\n          ...item,\n          money: money,\n          type: item.value.indexOf(\"-\") === -1 ? 1 : -1\n        };\n      });\n      this.data = data;\n      this.onLoad(data);\n    });\n  }\n};","map":{"version":3,"names":["echarts","BoxBorder","Count","name","components","data","methods","onLoad","dataDict","myChart","init","document","getElementById","xData","map","item","money","console","log","option","tooltip","show","trigger","backgroundColor","padding","grid","borderWidth","top","bottom","left","right","textStyle","color","xAxis","type","axisTick","axisLine","lineStyle","axisLabel","inside","fontWeight","fontSize","splitArea","splitLine","yAxis","formatter","series","itemStyle","normal","graphic","LinearGradient","offset","barBorderRadius","emphasis","shadowBlur","shadowColor","zlevel","barWidth","xAxisIndex","shadowOffsetX","shadowOffsetY","setOption","window","addEventListener","resize","mounted","count2","then","res","name2","value","value2","indexOf","parseFloat","replace"],"sources":["src/views/component/BoxView3.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div style=\"height: calc(100% - 20px); width: calc(100% - 20px); margin: 0 auto; position: relative;\">\r\n      <box-border style=\"height: 100%;\"/>\r\n      <div style=\"position:absolute; top: 0; width: 100%; height: 100%;\">\r\n        <div class=\"box-bg\" style=\"text-align: center; font-size: 20px; color: #FFFFFF; line-height: 35px;\">\r\n          港股通资金流\r\n        </div>\r\n        <div style=\" height: calc(100% - 65px); overflow:auto;\">\r\n          <div id=\"main-view\" style=\"height: calc(100% - 40px); width: 60%; margin: 0 auto;\"></div>\r\n          <div style=\"width: calc(60% - 80px); left: 15px; margin: 0 auto; height: 40px; position: relative; display: flex; justify-content: space-between;\">\r\n            <div class=\"box-text-bg\" style=\"line-height: 35px; color: #409EFF; position: absolute; left: -160px; width: 140px; text-align: center; \">资金净流入</div>\r\n            <div :class=\"{'red-box-text-bg': item.type === -1, 'blue-box-text-bg': item.type === 1}\" class=\"box-text-bg\" v-for=\"(item, index) of data\" :key=\"index\" style=\"width: 24%;\">\r\n              <div style=\"text-align: center; line-height: 35px;\">{{item.value}}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from 'echarts';\r\nimport BoxBorder from \"@/views/component/BoxBorder\";\r\nimport Count from \"@/api/Count\";\r\nexport default {\r\n  name: \"BoxView3\",\r\n  components: {BoxBorder},\r\n  data() {\r\n    return {\r\n      data: []\r\n    }\r\n  },\r\n  methods: {\r\n    onLoad(dataDict) {\r\n      // 基于准备好的dom，初始化echarts实例\r\n      let myChart = echarts.init(document.getElementById('main-view'));\r\n\r\n      let xData = dataDict.map(item => item.name);\r\n\r\n      let data = dataDict.map(item => item.money);\r\n      console.log(data);\r\n\r\n      let option = {\r\n        // backgroundColor: \"#141f56\",\r\n\r\n        tooltip: {\r\n          show: \"true\",\r\n          trigger: 'item',\r\n          backgroundColor: 'rgba(0,0,0,0.4)', // 背景\r\n          padding: [8, 10], //内边距\r\n          // extraCssText: 'box-shadow: 0 0 3px rgba(255, 255, 255, 0.4);', //添加阴影\r\n\r\n        },\r\n        grid: {\r\n          borderWidth: 0,\r\n          top: 20,\r\n          bottom: 35,\r\n          left:55,\r\n          right:30,\r\n          textStyle: {\r\n            color: \"#fff\"\r\n          }\r\n        },\r\n        xAxis: [{\r\n          type: 'category',\r\n\r\n          axisTick: {\r\n            show: false\r\n          },\r\n          axisLine: {\r\n            show: true,\r\n            lineStyle: {\r\n              color: '#363e83',\r\n            }\r\n          },\r\n          axisLabel: {\r\n            inside: false,\r\n            textStyle: {\r\n              color: '#bac0c0',\r\n              fontWeight: 'normal',\r\n              fontSize: '12',\r\n            },\r\n          },\r\n          data: xData,\r\n        }, {\r\n          type: 'category',\r\n          axisLine: {\r\n            show: false\r\n          },\r\n          axisTick: {\r\n            show: false\r\n          },\r\n          axisLabel: {\r\n            show: false\r\n          },\r\n          splitArea: {\r\n            show: false\r\n          },\r\n          splitLine: {\r\n            show: false\r\n          },\r\n          data: xData,\r\n        }],\r\n        yAxis: {\r\n          type: 'value',\r\n          axisTick: {\r\n            show: false\r\n          },\r\n          axisLine: {\r\n            show: true,\r\n            lineStyle: {\r\n              color: '#32346c',\r\n            }\r\n          },\r\n          splitLine: {\r\n            show: true,\r\n            lineStyle: {\r\n              color: '#32346c ',\r\n            }\r\n          },\r\n          axisLabel: {\r\n            textStyle: {\r\n              color: '#bac0c0',\r\n              fontWeight: 'normal',\r\n              fontSize: '12',\r\n            },\r\n            formatter: '{value}',\r\n          },\r\n        },\r\n        series: [{\r\n          type: 'bar',\r\n          itemStyle: {\r\n            normal: {\r\n              show: true,\r\n              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                offset: 0,\r\n                color: '#00c0e9'\r\n              }, {\r\n                offset: 1,\r\n                color: '#3b73cf'\r\n              }]),\r\n              barBorderRadius: 50,\r\n              borderWidth: 0,\r\n            },\r\n            emphasis: {\r\n              shadowBlur: 15,\r\n              shadowColor: 'rgba(105,123, 214, 0.7)'\r\n            }\r\n          },\r\n          zlevel: 2,\r\n          barWidth: '20%',\r\n          data: data,\r\n        },\r\n          {\r\n            name: '',\r\n            type: 'bar',\r\n            xAxisIndex: 1,\r\n            zlevel: 1,\r\n            itemStyle: {\r\n              normal: {\r\n                color: '#121847',\r\n                borderWidth: 0,\r\n                shadowBlur: {\r\n                  shadowColor: 'rgba(255,255,255,0.31)',\r\n                  shadowBlur: 10,\r\n                  shadowOffsetX: 0,\r\n                  shadowOffsetY: 2,\r\n                },\r\n              }\r\n            },\r\n            barWidth: '20%',\r\n            data: [30, 30, 30, 30, 30]\r\n          }\r\n        ]\r\n      }\r\n\r\n\r\n      // 使用刚指定的配置项和数据显示图表。\r\n      myChart.setOption(option);\r\n      window.addEventListener(\"resize\",function(){\r\n        myChart.resize();\r\n      });\r\n    }\r\n  },\r\n  mounted() {\r\n    Count.count2(\"港股通资金流\").then(res => {\r\n      let data = res.data;\r\n      data = data.map(item => {\r\n        return {\r\n          name: item.name === '沪港通' || item.name === '深港通' ? item.name2 : item.name,\r\n          value: item.name === '沪港通' || item.name === '深港通' ? item.value2 : item.value,\r\n        };\r\n      })\r\n      data = data.map(item => {\r\n        let money = 0;\r\n        if (item.value.indexOf(\"万元\") !== -1) {\r\n          money = parseFloat(item.value.replace(\"-\", \"\").replace(\"万元\", \"\") + \"00000\")\r\n        }\r\n        if (item.value.indexOf(\"亿元\") !== -1) {\r\n          money = parseFloat(item.value.replace(\"-\", \"\").replace(\"亿元\", \"\") + \"000000000\")\r\n        }\r\n        return {\r\n          ...item,\r\n          money: money,\r\n          type: item.value.indexOf(\"-\") === -1 ? 1 : -1,\r\n        }\r\n      })\r\n      this.data = data;\r\n      this.onLoad(data);\r\n    })\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.select-item {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  color: #FFFFFF;\r\n  padding: 0 30px;\r\n  margin: 10px 20px 0 20px;\r\n}\r\n.red-box-text-bg {\r\n  box-shadow: -2px 0px 10px rgba(255,0,0,0.7) inset, 2px 0px 10px rgba(255,0,0,0.7) inset !important;\r\n  color: #F56C6C !important;\r\n}\r\n.blue-box-text-bg {\r\n  color: #409EFF;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}