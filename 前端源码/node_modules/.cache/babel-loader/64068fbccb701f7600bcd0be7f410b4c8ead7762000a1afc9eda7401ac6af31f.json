{"ast":null,"code":"import { getClient } from './upload/ali';\nimport { getToken } from './upload/qiniu';\nimport { getAsVal, HTMLFormat, validatenull, uuid } from './upload/util';\nimport { detailImg, fileToBase64 } from './upload/canvas';\nimport $ImageCropper from './image-cropper/';\nimport Plugin from './plugin.js';\nimport E from 'wangeditor';\nexport default {\n  name: 'AvueUeditor',\n  props: {\n    data: {\n      type: Object,\n      default: () => {\n        return {};\n      }\n    },\n    headers: {\n      type: Object,\n      default: () => {\n        return {};\n      }\n    },\n    customConfig: {\n      type: Object,\n      default: () => {\n        return {};\n      }\n    },\n    propsHttp: {\n      type: Object,\n      default: () => {\n        return {};\n      }\n    },\n    canvasOption: {\n      type: Object,\n      default: () => {\n        return {};\n      }\n    },\n    cropperOption: {\n      type: Object,\n      default: () => {\n        return {};\n      }\n    },\n    options: {\n      type: Object,\n      default: () => {\n        return {};\n      }\n    },\n    ali: {\n      type: Object,\n      default: () => {\n        return {};\n      }\n    },\n    qiniu: {\n      type: Object,\n      default: () => {\n        return {};\n      }\n    },\n    oss: String,\n    action: String,\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    value: {\n      type: String,\n      default: ''\n    },\n    placeholder: {\n      type: String,\n      default: ''\n    }\n  },\n  data() {\n    return {\n      id: 'avue-ueditor-' + uuid(),\n      text: '',\n      show: false,\n      editor: ''\n    };\n  },\n  computed: {\n    fileName() {\n      return this.propsHttp.fileName || 'file';\n    },\n    homeUrl() {\n      return this.propsHttp.home || '';\n    },\n    resKey() {\n      return this.propsHttp.res;\n    },\n    domId() {\n      return '#' + this.id;\n    },\n    imgFlag() {\n      return this.img.url == '';\n    },\n    isImg() {\n      return this.img.obj.src;\n    },\n    urlKey() {\n      return this.propsHttp.url || 'url';\n    },\n    isHtml() {\n      return validatenull(this.customConfig.showHtml) ? true : this.customConfig.showHtml;\n    },\n    isQiniuOSS() {\n      return this.oss === 'qiniu';\n    },\n    isAliOSS() {\n      return this.oss === 'ali';\n    }\n  },\n  watch: {\n    disabled(val) {\n      if (val) {\n        this.editor.disable();\n      } else {\n        this.editor.enable();\n      }\n    },\n    value(val) {\n      if (val !== this.editor.txt.html()) {\n        this.text = val;\n        this.editor.txt.html(val);\n      }\n      try {\n        this.editor.selection.moveCursor(this.phoneEditor.$textElem.elems[0], false);\n      } catch (err) {}\n    }\n  },\n  mounted() {\n    this.initEdit();\n  },\n  methods: {\n    closeDialog() {\n      this.text = HTMLFormat(this.text);\n      this.handleChange();\n      this.show = false;\n    },\n    handleChange() {\n      this.$emit('input', this.text);\n      this.$emit('change', this.text);\n    },\n    initEdit() {\n      this.editor = new E(this.domId);\n      if (this.isHtml) {\n        E.registerMenu('Plugin', Plugin(this));\n      }\n      this.editor.config.zIndex = 100;\n      this.editor.config.menuTooltipPosition = 'down';\n      this.editor.config.placeholder = this.placeholder;\n      this.editor.config.showFullScreen = true;\n      this.editor.config.pasteFilterStyle = false;\n      this.editor.config.onfocus = () => {\n        this.$emit('focus', this.text);\n      };\n      this.editor.config.onblur = html => {\n        this.$emit('blur', html);\n      };\n      this.editor.config.onchange = html => {\n        this.text = html;\n        this.handleChange();\n      };\n      this.editor.config.emotions = [{\n        title: 'emoji',\n        // tab 的标题\n        type: 'emoji',\n        // 'emoji' / 'image'\n        // emoji 表情，content 是一个数组即可\n        content: '😀 😃 😄 😁 😆 😅 😂 😊 😇 🙂 🙃 😉 😓 😪 😴 🙄 🤔 😬 🤐'.split(/\\s/)\n      }];\n      this.initUploadImg();\n      this.editor.config = Object.assign(this.editor.config, this.customConfig);\n      this.editor.create();\n      this.editor.txt.html(this.value);\n      if (this.disabled === true) this.editor.disable();\n    },\n    initUploadImg() {\n      const callback = (file, insert) => {\n        this.uploadFile(file[0]).then(res => {\n          insert(res);\n        });\n      };\n      this.editor.config.customUploadVideo = callback;\n      this.editor.config.customUploadImg = callback;\n    },\n    uploadFile(file) {\n      return new Promise((resolve, reject) => {\n        const done = () => {\n          const headers = Object.assign(this.headers, {\n            'Content-Type': 'multipart/form-data'\n          });\n          let oss_config = {};\n          let client;\n          let param = new FormData();\n          let url = this.action;\n          param.append(this.fileName, file);\n          Object.keys(this.data).forEach(ele => {\n            param.append(ele, this.data[ele]);\n          });\n          if (this.isQiniuOSS) {\n            oss_config = this.qiniu;\n            const token = getToken(oss_config.AK, oss_config.SK, {\n              scope: oss_config.scope,\n              deadline: new Date().getTime() + oss_config.deadline * 3600\n            });\n            param.append('token', token);\n            url = 'http://up.qiniu.com/';\n          } else if (this.isAliOSS) {\n            oss_config = this.ali;\n            client = getClient({\n              region: oss_config.region,\n              endpoint: oss_config.endpoint,\n              accessKeyId: oss_config.accessKeyId,\n              accessKeySecret: oss_config.accessKeySecret,\n              bucket: oss_config.bucket\n            });\n          }\n          (() => {\n            if (this.isAliOSS) {\n              return client.put(file.name, file);\n            } else {\n              return this.$axios.post(url, param, {\n                headers\n              });\n            }\n          })().then(res => {\n            let list = {};\n            var result = '';\n            if (this.isAliOSS) {\n              list = res;\n              result = list.url;\n            } else if (this.isQiniuOSS) {\n              list = res.data;\n              list.key = oss_config.url + list.key;\n              result = list.key;\n            } else {\n              if (typeof this.resKey === 'function') {\n                result = this.resKey(res.data);\n              } else {\n                list = getAsVal(res.data, this.resKey);\n                result = list[this.urlKey];\n              }\n            }\n            var html = this.homeUrl + result;\n            resolve(html);\n          }).catch(err => {\n            reject(err);\n          });\n        };\n        //处理水印图片\n        const canvasDone = () => {\n          if (!validatenull(this.canvasOption)) {\n            detailImg(file, this.canvasOption, res => {\n              file = res;\n              done();\n            });\n          } else {\n            done();\n          }\n        };\n        //处理图片剪裁\n        if (!validatenull(this.cropperOption)) {\n          fileToBase64(file, res => {\n            let option = Object.assign(this.cropperOption, {\n              img: res,\n              type: 'file',\n              callback: res => {\n                file = res;\n                canvasDone();\n              }\n            });\n            $ImageCropper(option);\n          });\n        } else {\n          canvasDone();\n        }\n      });\n    },\n    getUEContent() {\n      return this.editor.txt.html();\n    }\n  }\n};","map":{"version":3,"names":["getClient","getToken","getAsVal","HTMLFormat","validatenull","uuid","detailImg","fileToBase64","$ImageCropper","Plugin","E","name","props","data","type","Object","default","headers","customConfig","propsHttp","canvasOption","cropperOption","options","ali","qiniu","oss","String","action","disabled","Boolean","value","placeholder","id","text","show","editor","computed","fileName","homeUrl","home","resKey","res","domId","imgFlag","img","url","isImg","obj","src","urlKey","isHtml","showHtml","isQiniuOSS","isAliOSS","watch","val","disable","enable","txt","html","selection","moveCursor","phoneEditor","$textElem","elems","err","mounted","initEdit","methods","closeDialog","handleChange","$emit","registerMenu","config","zIndex","menuTooltipPosition","showFullScreen","pasteFilterStyle","onfocus","onblur","onchange","emotions","title","content","split","initUploadImg","assign","create","callback","file","insert","uploadFile","then","customUploadVideo","customUploadImg","Promise","resolve","reject","done","oss_config","client","param","FormData","append","keys","forEach","ele","token","AK","SK","scope","deadline","Date","getTime","region","endpoint","accessKeyId","accessKeySecret","bucket","put","$axios","post","list","result","key","catch","canvasDone","option","getUEContent"],"sources":["node_modules/avue-plugin-ueditor/packages/ueditor/src/index.vue"],"sourcesContent":["<template>\n  <div class=\"avue-ueditor\">\n    <div :id=\"id\" />\n    <div v-if=\"show\"\n         class=\"wangEditor_html-content\">\n      <div class=\"wangEditor_html-header\">\n        <span class=\"wangEditor_html-close\"\n              @click=\"closeDialog\">x</span>\n      </div>\n      <textarea v-model=\"text\" />\n    </div>\n  </div>\n</template>\n<script>\nimport { getClient } from './upload/ali'\nimport { getToken } from './upload/qiniu'\nimport { getAsVal, HTMLFormat, validatenull, uuid } from './upload/util'\nimport { detailImg, fileToBase64 } from './upload/canvas'\nimport $ImageCropper from './image-cropper/';\nimport Plugin from './plugin.js'\nimport E from 'wangeditor'\nexport default {\n  name: 'AvueUeditor',\n  props: {\n    data: {\n      type: Object,\n      default: () => {\n        return {}\n      },\n    },\n    headers: {\n      type: Object,\n      default: () => {\n        return {}\n      },\n    },\n    customConfig: {\n      type: Object,\n      default: () => {\n        return {}\n      },\n    },\n    propsHttp: {\n      type: Object,\n      default: () => {\n        return {}\n      },\n    },\n    canvasOption: {\n      type: Object,\n      default: () => {\n        return {};\n      }\n    },\n    cropperOption: {\n      type: Object,\n      default: () => {\n        return {};\n      }\n    },\n    options: {\n      type: Object,\n      default: () => {\n        return {}\n      },\n    },\n    ali: {\n      type: Object,\n      default: () => {\n        return {}\n      },\n    },\n    qiniu: {\n      type: Object,\n      default: () => {\n        return {}\n      },\n    },\n    oss: String,\n    action: String,\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n    value: {\n      type: String,\n      default: '',\n    },\n    placeholder: {\n      type: String,\n      default: ''\n    }\n  },\n  data () {\n    return {\n      id: 'avue-ueditor-' + uuid(),\n      text: '',\n      show: false,\n      editor: '',\n    }\n  },\n  computed: {\n    fileName () {\n      return this.propsHttp.fileName || 'file'\n    },\n    homeUrl () {\n      return this.propsHttp.home || ''\n    },\n    resKey () {\n      return this.propsHttp.res\n    },\n    domId () {\n      return '#' + this.id\n    },\n    imgFlag () {\n      return this.img.url == ''\n    },\n    isImg () {\n      return this.img.obj.src\n    },\n    urlKey () {\n      return this.propsHttp.url || 'url'\n    },\n    isHtml () {\n      return validatenull(this.customConfig.showHtml) ? true : this.customConfig.showHtml\n    },\n    isQiniuOSS () {\n      return this.oss === 'qiniu'\n    },\n    isAliOSS () {\n      return this.oss === 'ali'\n    }\n  },\n  watch: {\n    disabled (val) {\n      if (val) {\n        this.editor.disable()\n      } else {\n        this.editor.enable()\n      }\n    },\n    value (val) {\n      if (val !== this.editor.txt.html()) {\n        this.text = val;\n        this.editor.txt.html(val)\n      }\n      try {\n        this.editor.selection.moveCursor(this.phoneEditor.$textElem.elems[0], false);\n      } catch (err) {\n\n      }\n    }\n  },\n  mounted () {\n    this.initEdit()\n  },\n  methods: {\n    closeDialog () {\n      this.text = HTMLFormat(this.text)\n      this.handleChange()\n      this.show = false\n    },\n    handleChange () {\n      this.$emit('input', this.text)\n      this.$emit('change', this.text)\n    },\n    initEdit () {\n      this.editor = new E(this.domId)\n      if (this.isHtml) {\n        E.registerMenu('Plugin', Plugin(this))\n      }\n      this.editor.config.zIndex = 100\n      this.editor.config.menuTooltipPosition = 'down'\n      this.editor.config.placeholder = this.placeholder\n      this.editor.config.showFullScreen = true\n      this.editor.config.pasteFilterStyle = false\n      this.editor.config.onfocus = () => {\n        this.$emit('focus', this.text)\n      }\n      this.editor.config.onblur = (html) => {\n        this.$emit('blur', html)\n      }\n      this.editor.config.onchange = (html) => {\n        this.text = html\n        this.handleChange()\n      }\n      this.editor.config.emotions = [\n        {\n          title: 'emoji',  // tab 的标题\n          type: 'emoji', // 'emoji' / 'image'\n          // emoji 表情，content 是一个数组即可\n          content: '😀 😃 😄 😁 😆 😅 😂 😊 😇 🙂 🙃 😉 😓 😪 😴 🙄 🤔 😬 🤐'.split(/\\s/),\n        }\n      ]\n      this.initUploadImg()\n      this.editor.config = Object.assign(\n        this.editor.config,\n        this.customConfig\n      )\n      this.editor.create()\n      this.editor.txt.html(this.value)\n      if (this.disabled === true) this.editor.disable()\n    },\n    initUploadImg () {\n      const callback = (file, insert) => {\n        this.uploadFile(file[0]).then((res) => {\n          insert(res)\n        })\n      }\n      this.editor.config.customUploadVideo = callback\n      this.editor.config.customUploadImg = callback\n    },\n    uploadFile (file) {\n      return new Promise((resolve, reject) => {\n        const done = () => {\n          const headers = Object.assign(this.headers, {\n            'Content-Type': 'multipart/form-data',\n          })\n          let oss_config = {}\n          let client\n          let param = new FormData()\n          let url = this.action\n          param.append(this.fileName, file)\n          Object.keys(this.data).forEach(ele => {\n            param.append(ele, this.data[ele])\n          })\n          if (this.isQiniuOSS) {\n            oss_config = this.qiniu\n            const token = getToken(oss_config.AK, oss_config.SK, {\n              scope: oss_config.scope,\n              deadline:\n                new Date().getTime() + oss_config.deadline * 3600,\n            })\n            param.append('token', token)\n            url = 'http://up.qiniu.com/'\n          } else if (this.isAliOSS) {\n            oss_config = this.ali\n            client = getClient({\n              region: oss_config.region,\n              endpoint: oss_config.endpoint,\n              accessKeyId: oss_config.accessKeyId,\n              accessKeySecret: oss_config.accessKeySecret,\n              bucket: oss_config.bucket,\n            })\n          }\n          (() => {\n            if (this.isAliOSS) {\n              return client.put(file.name, file)\n            } else {\n              return this.$axios.post(url, param, { headers })\n            }\n          })().then((res) => {\n            let list = {}\n            var result = ''\n            if (this.isAliOSS) {\n              list = res\n              result = list.url\n            } else if (this.isQiniuOSS) {\n              list = res.data\n              list.key = oss_config.url + list.key\n              result = list.key\n            } else {\n              if (typeof (this.resKey) === 'function') {\n                result = this.resKey(res.data);\n              } else {\n                list = getAsVal(res.data, this.resKey);\n                result = list[this.urlKey]\n              }\n            }\n            var html = this.homeUrl + result\n            resolve(html)\n          })\n            .catch((err) => {\n              reject(err)\n            })\n        }\n        //处理水印图片\n        const canvasDone = () => {\n          if (!validatenull(this.canvasOption)) {\n            detailImg(file, this.canvasOption, res => {\n              file = res;\n              done();\n            });\n          } else {\n            done()\n          }\n        }\n        //处理图片剪裁\n        if (!validatenull(this.cropperOption)) {\n          fileToBase64(file, (res) => {\n            let option = Object.assign(this.cropperOption, {\n              img: res,\n              type: 'file',\n              callback: res => {\n                file = res;\n                canvasDone()\n              }\n            })\n            $ImageCropper(option)\n          })\n        } else {\n          canvasDone()\n        }\n      })\n    },\n    getUEContent () {\n      return this.editor.txt.html()\n    }\n  }\n}\n</script>\n<style>\n.wangEditor_html {\n  color: #999;\n  font-size: 14px;\n  font-weight: bold;\n}\n.wangEditor_html-content {\n  position: fixed;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 2048;\n  padding: 0 20px;\n  background-color: #fff;\n  box-sizing: border-box;\n}\n.wangEditor_html-content textarea {\n  width: 100%;\n  height: 90%;\n  border-color: #ccc;\n  border-radius: 5px;\n  padding: 10px;\n  box-sizing: border-box;\n}\n.wangEditor_html-header {\n  padding: 5px 0;\n  text-align: right;\n}\n.wangEditor_html-close {\n  color: #333;\n  font-weight: bold;\n  font-size: 22px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}